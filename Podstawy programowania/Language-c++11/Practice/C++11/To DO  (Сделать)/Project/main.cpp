///////////////////////////////////////////////////////////////////
//                                                               //
// Ïðîãðàììà íàïèñàíà â ñðåäå Code::Bloks 10.05 íà ÿçûêå Ñ++     //
// Ìîé ýìåéë:alex-dragon7@mail.ru èëè ajndrey@yandex.ru          //
// Ñåé÷àñ ïåðåõîæó ê ïðîãðàììèðîâàíèþ ðîáîòîòåõíèêè è èùþ äðóçåé!//
// Ïèøèòå áóäó ðàä)))!!!                                         //
// Çà äåíüãè íè÷åãî ïðîãðàììèðîâàòü íå îõîòà,è ýòî ìîé ñòèëü)))  //
//                                                               //
///////////////////////////////////////////////////////////////////

#include <iostream>
char board[9] = {};              //×òîáû îòîáðàçèòü õîä(ââîä)ïîëüçîâàòåëÿ íà äîñêå. Äîñêà áóäèò ñîñòîÿòü èç 9-è îäíîáóêâåííûõ ñòðèíãîâ char

//=============================ôóíêöèÿ clearscreen ===========================================================================================================================================================================================================================================================================================================================

void clearscreen()               // î÷èùàåò îêíî êîíñîëè, ôóíêöèÿ clearscreen íè ÷åãî íå âîçâðàùàå.
{
    for(int i = 0; i<100; i++)  //öèêë for(int i = 0;  i<100;  i++) êîòîðûé îòñ÷èòûâàåò îò 0 äî 100 è ïðè êàæäîì ïîâòîðåíèè öèêëà âûâîäèò íà ýêðàí std::cout<<std::endl; íîâóþ ñòðî÷êó
    {
        std::cout<<std::endl;//âûâîäèò íà ýêðàí std::cout<<std::endl; íîâóþ ñòðî÷êó
    }
}

//=============================ôóíêöèÿ clearboard===========================================================================================================================================================================================================================================================================================================================

void clearboard()            //ýòà ôóíêöèÿ î÷èùàåò äîñêó è íè ÷åãî íå âîçâðàùàåò
{
    for(int i = 0; i<9; i++) //öèêëfor(int i = 0;  i<9;  i++)) êîòîðûé â öèêëå ïðîõîäèò ïî âñåì 9-è ÿ÷åéêàì íà äîñêå. board[i] ïîñòàâèò òóäà  ïóñòûøêó = '-‘. Ýòî âîçâðàùàåò äîñêó â ñâî¸ èçíà÷àëüíîå ñîñòîÿíèå.
    {
        board[i] = '-';  //board[i] ïîñòàâèò òóäà  ïóñòûøêó = '-‘. Ýòî âîçâðàùàåò äîñêó â ñâî¸ èçíà÷àëüíîå ñîñòîÿíèå.
    }

}

//==================================ôóíêöèÿ bool has_wonQ(char player)======================================================================================================================================================================================================================================================================================================================

bool has_wonQ(char player)                                     //ôóíêöèÿ bool has_wonQ(char player)êîòîðàÿ ïðîâåðÿåò êîãäà èãðà çàêîí÷èëàñü. Ôóíêöèÿ has_wonQ  âîçâðàùàåò bool(ïðàâäà èëè ëîæü, ò.å. bool ýòî ïåðåìåííàÿ ñ äâóìÿ ñîñòîÿíèÿìè ëèáî 0(íîëü) åñëè ñîñòîÿíèå ëîæü è ëèáî 1(åäèíèöà) åñëè ñîñòîÿíèå ïðàâäà)
{
    int wins[][3] = {{0,1,2}, {3,4,5}, {6,7,8}, {0,3,6}, {1,4,7},//äâóõìåðíûé ìàññèâ wins[8][3](8 ïî 3) â êîòîðîì ïåðå÷èñëÿþòñÿ âñå âûèãðûøíûå âàðèàíòû
        {2,5,8}, {0,4,8}, {2,4,6}
    };
//Ýòèìè öèêëàìè ïðîâåðÿåòñÿ åñëè ó îäíîãî èç èãðîêîâ åñòü ôèøêè íà âñåõ òð¸õ ìåñòàõ èç êàêîé-íèáóäü èç òðîéêè. Ê ïðèìåðó åñëè îäèí èç èãðîêîâ ïåðâûì ïîñòàâèë êðåñòèêè èëè íîëèêè â êëåòêàõ 1, 2, 3 (ò.ê. ïåðåìåííûå îòñ÷èòûâàþòñÿ ñ 0(íîëÿ) òîãäà ýêâèâàëåíò êëåòîê 1, 2, 3  â îêíå êîíñîëè â êîäå {0,1,2} ) òî îí âûèãðàë.
//Ãðóáî ãîâîðÿ öèêë  for(int i = 0; i<8; i++)ïðîâåðÿåò ìàññèâ[8], à öèêë  for(int j = 0; j<3; j++) ïðîâåðÿåò ìàññèâ [3]
    for(int i = 0; i<8; i++)     //öèêë for êîòîðûé ïîâòîðÿåòñÿ 8 ðàç (int i = 0; i<8; i++)
    {
        int count = 0;          //ïåðåìåííàÿint ñ÷¸ò÷èêcount è çàäà¸òñÿ åé çíà÷åíèå =0. Ãðóáî ãîâîðÿ öèêë  for(int i = 0; i<8; i++)ïðîâåðÿåò ìàññèâ[8], à öèêë  for(int j = 0; j<3; j++) ïðîâåðÿåò ìàññèâ [3]
        for(int j = 0; j<3; j++) //â ýòîì öèêëå çàïóñêàåòñÿ åù¸ öèêë for êîòîðûé ïîâòîðÿåòñÿ 3 ðàçà (int j = 0; j<3; j++)
        {
            if(board[wins[i][j]] == player)//Ifåñëè(íà boardäîñêå íà êâàäðàòèêå êîòîðûé çàäàí â ìàññèâå[wins]ïî ýëåìåíòó[i] è [j] áóäèò ðîâíÿòüñÿ  player (ïðîâåðÿåìîãî X èëè Î (char player))
                count++;//Åñëè íà ýòîì ìåñòå  â ìàññèâå äîñêà ñòîèò X òî óâåëè÷èâàåòñÿ count íà åäèíèöó ++.
        }
        if(count == 3) //Ifåñëè(ñ÷¸ò÷èêcount  ðîâíÿåòñÿ== 3) ò.å. ê ïðèìåðó ïðîõîäèòñÿ òðîå÷êà {0,1,2} è âñå òðè ðîâíÿþòñÿ êðåñòèêó(Õ) èëè íîëèêó(Î) òî âîçâðàùàåòñÿreturn
        {
            return true;//ïðàâäàtrue(îí âûèãðàë)
        }
    }
    return false;    //à åñëè ýòî íå ïðîèçîøëî òî âîçâðàùàåòñÿreturn ëîæüfalse(îí íå âûèãðàë)
}

//===================================ôóíêöèÿ void print_board============================================================================================================================================================================================================================================================

void print_board(std::string indent) //ôóíêöèÿ void print_board(){ … } êîòîðàÿ áóäèò âûâîäèòü  äîñêó íà ýêðàí
{
    std::cout <<"Game board\n";        //Âûâîäèòñÿ íà ýêðàí çàãîëîâîê Game board
    std::cout<<indent<<"-"<<board[6]<<"-|-"<<board[7]<<"-|-"<<board[8]<<"- \n";//Âûâîäèòñÿ ïóñòàÿ äîñêà ñ çàãîëîâêîì “Game board” (èãðîâîå ïîëå)
    std::cout<<indent<<"-"<<board[3]<<"-|-"<<board[4]<<"-|-"<<board[5]<<"- \n";// â êîòîðîé è áóäóò îòîáðàæàòüñÿ X èëè Î
    std::cout<<indent<<"-"<<board[0]<<"-|-"<<board[1]<<"-|-"<<board[2]<<"- \n";//Çàìåíÿåòñÿ ïåðåìåííàÿ ñòðèíã (-) íà ïåðåìåííóþ board[] ñ íîìåðîì êëåòêè, ò.ê.  ïåðåìåííûå íà÷èíàþòñÿ ñ íóëÿ, òî  âìåñòî 1 ïèøåòñÿ 0, âìåñòî 2 ïèøåòñÿ 1 è ò.ä.
}

//================================ôóíêöèÿ get_move=================================================================================================================================================================================================================================================================

int get_move() // Ñîçäà¸òñÿ ôóíêöèÿ “get_move()“(Ïîëó÷èòü ââîä ïîëüçîâàòåëÿ)
{
    std::cout<<"\nMenu hodov: \n";     // Ñ ïîìîùüþ std::cout  â îêíî âûâîäèòñÿ  çàãîëîâîê Menu hodov:
    std::cout<<"-7-|-8-|-9-" << std::endl;// è íîìèðàöèþ ÿ÷ååê  "-7-|-8-|-9-"  è ò.ä.
    std::cout<<"-4-|-5-|-6-" << std::endl;//Ñòðîêè çàêàí÷èâàþòñÿ îïåðàòîðàìè  \n(îïåðàòîð ïåðåõîäà íà íîâóþ ñòðî÷êó) è endl  â êîíöå ñòðîê (;)
    std::cout<<"-1-|-2-|-3-" << std::endl;//
    std::cout<<"\n";                      //Ïðîïóñê ñòðîêè

    print_board("");//â ñêîáêàõ ïèøåòñÿ ïóñòîé ñòðèíã (äâà äâîåòî÷èå)
    std::cout << "\nVvod chisla: ";//Âûâîäèòñÿ ñîîáùåíèå Vvod chisla: îáúåêòîì cout


    int move;// ×òî áû ïîëó÷èòü âõîä ïîëüçîâàòåëÿ ñîçäà¸òñÿ ïåðåìåííàÿ move
    std::cin >> move;//Ïðîñèì ÷òî áû ïîëüçîâàòåëü ââ¸ë ýòó ïåðåìåííóþ (÷èñëî)
    while(move > 9 || move < 1 || board[move-1]!= '-') //Öèêë  while  ïðîâåðÿåò âõîä  êîòîðûé äàë ïîëüçîâàòåëü áîëüøå 9  (move > 9) èëè (|| ) âõîä ìåíüøå  1 (move < 1 )
    {
        std::cout<<"Vvedite chislo ot (1 do 9):\n";//Åñëè ïîëüçîâàòåëü ââ¸ë ÷èñëî ìåíüøå 1 è áîëüøå 9 òî âûâîäèòñÿ íà ýêðàí ñîîáùåíèå "Vvedite chislo ot 1 do 9:"
        std::cin >> move;//Çàïðàøèâàåì ñ ïîìîùüþ std::cin >> ó ïîëüçîâàòåëÿ äðóãîé âõîä move(ââîä ÷èñëà îò 1 äî 9)

    }
    return move;//Âîçâðàùàåì îïåðàòîðîì return  çíà÷åíèå  “move”
}
//=============================ôóíêöèÿ play_and_get_winner============================================================================================================================================================================================

char play_and_get_winner() //ôóíêöèÿ play_and_get_winner() îíà áóäèò âîçâðàùàòü char(ñèìâîë) ò.å. ñûãðàòü â èãðó è ïîëó÷èòü âûèãðàâøåãî
{
    int turn = 1;//ïåðåìåííàÿ turn(õîä) òèïà int èçíà÷àëüíî áóäèò ïåðâîé õîä è ðîâíÿòüñÿ= 1

    while(!has_wonQ('X') && !has_wonQ('0')) //while(íå! âûèãðàë ïîëüçîâàòåëühas_wonQ èãðàþùèé èêñîì(X)('x') è&&  íå! âûèãðàë ïîëüçîâàòåëühas_wonQ èãðàþùèé íîëèêîì(Î)('Î')) òî âûïîëíÿåòñÿ êîä íèæå
    {
        clearscreen();// î÷èùàåò îêíî êîíñîëè
        int move = get_move();//Âûçûâàåòñÿ ôóíêöèÿ get_move()è ïîìåùàåòñÿ òî ÷òî îíà âåðíåò â ïåðåìåííóþ

        clearscreen();  // î÷èùàåò îêíî êîíñîëè
        if(turn%2 == 1) //Ñòðîêîé if(i%2 == 0) ïðîâåðÿåòñÿ ÷¸òíîå èëè íå÷¸òíîå ÷èñëî ââ¸ë ïîëüçîâàòåëü ò.å. åñëè i ïî ìîäóëþ 2 ðàâíÿåòñÿ 1, òî ýòî ÷¸òíûé õîä,
        {
            board[move-1]='X';//òî òîãäà çàäà¸òñÿ çíà÷åíèå   ='X'
            if(has_wonQ('X')) //ifåñëè(has_wonQ('X')ïîëüçîâàòåëü èãðàþùèé çà 'X' åñëè îí âûèãðàë
            {
                std::cout <<"X,Pozdravlyau vi vuigrali!\n";//òî ïå÷àòàåòñÿ ïîçäðàâëåíèå "X,Pozdravlyau vi vuigrali!"
                return 'X'; // âîçâðàùàåòreturn èç ôóíêöèè'X' ÷òî ïîëüçîâàòåëü èãðàþùèé 'X' âûèãðàë
            }

        }
        else                     // Âñå îñòàëüíûå õîäû áóäóò íå÷¸òíûå,
        {
            board[move-1]='0';//òî òîãäà çàäà¸òñÿ çíà÷åíèå   ='Î'
            if(has_wonQ('0')) //ifåñëè(has_wonQ('X')ïîëüçîâàòåëü èãðàþùèé çà 'X' åñëè îí âûèãðàë
            {
                std::cout <<"O,Pozdravlyau vi vuigrali!\n";//òî ïå÷àòàåòñÿ ïîçäðàâëåíèå "O,Pozdravlyau vi vuigrali!"
                return '0';       // âîçâðàùàåòreturn èç ôóíêöèè'X' ÷òî ïîëüçîâàòåëü èãðàþùèé 'X' âûèãðàë
            }
        }
        turn++;                 //Â êîíöå öèêëà ãîâîðèòñÿ turn(õîä) óâåëè÷èòü íà åäèíèöó++
        if(turn == 10)          //ifåñëè(turnâõîä ==ðîâíÿåòñÿ 10). Ecëè ââîä ðàâåí 10, òî ÍÅ×Üß. T.å. ñòàâèòü êðåñòèê èëè íîëèê íåêóäà
        {
            std::cout << "nechya\n";//òîãäà âûâîäèòñÿ íà ýêðàí ñîîáùåíèå "nechya"
            return 'D';             //è îïåðàòîðreturn âîçâðàùàåò çíà÷åíèå D
        }
    }
}
//========================================Ãëàâíàÿ ôóíêöèÿ main=====================================================================================================================================================================================================================================================
int main()                         //Ãëàâíàÿ ôóíêöèÿ main
{
    std::cout <<"Privetstvuyu\n\n";//âûâîäèòñÿ ïðèâåòñòâåííîå ñîîáùåíèÿ "Privetstvuyu" ñðåäñòâîì std::cout è îïåðàòîðîì <<
    std::string reply = "y";//äåêëàðèðóåòñÿ ñòðèíã reply(îòâåò). reply(îòâåò) ïî íà÷àëó "y"(òî áèøü ÄÀ(YES))
    int x_wins=0, o_wins=0, ties=0;//ïåðå÷åíü ïåðåìåííûõ òèïàint  x_wins=0(ýòî êîëè÷åñòâî ðàç êîãäà ïîëüçîâàòåëü èãðàþùèé èêñàìè âûèãðàë), o_wins=0(ýòî êîëè÷åñòâî ðàç êîãäà ïîëüçîâàòåëü èãðàþùèé íîëèêàìè âûèãðàë), ties=0(êîëè÷åñòâî íå÷üèõ)è âñåì ïðèñâîåííî íóëåâîå çíà÷åíèå

    while(reply == "y") //Ñòðîèòñÿ öèêë while ïîêà îòâåò ïîëîæèòåëüíûé, ò.å. ïîêà îòâåò ==ðîâíÿåòñÿ "y"
    {
        clearboard();//ôóíêöèÿ void clearboard()êîòîðàÿ î÷èùàåò äîñêó.
        char winner = play_and_get_winner();//play_and_get_winner()(ãëàâíûé öèêë), è äàòü   char winner(âûèãðàâøèé). char winner ðîâíÿåòñÿ= play_and_get_winner()
        print_board("\t  ");//ïèøåòñÿ ñòðîêà print_board() ò.å. èñïîëüçóåòñÿ ôóíêöèÿ ÷òîáû åù¸ ðàç íàïå÷àòàòü äîñêó(board), à â ôóíêöèè main òàëá\t     print_board("\t  ")

        switch(winner) //Ïèøåòñÿ switch(ýòî êîíñòðóêöèÿ “åñëè, òî” ïðè ðàçíûõ çíà÷åíèÿõ ((winner)âûèãðàâøèé) áóäóò âûïîëíÿòñÿ ðàçíûå êóñêè êîäà)
        {
        case 'X':    //Ïåðâîå çíà÷åíèåcase 'X', åñëè âûãðàë ïîëüçîâàòåëü èãðàþùèé èêñàìè
            x_wins++;  //òîãäà ïåðåìåííàÿ x_wins óâåëè÷èâàåòñÿ íà åäèíèöó++
            break;     //è îñòàíàâëèâàåòñÿ break
        case '0':     //Âòîðîåîå çíà÷åíèåcase 'Î', åñëè âûãðàë ïîëüçîâàòåëü èãðàþùèé íîëèêàìè
            o_wins++;  //òîãäà ïåðåìåííàÿî_wins óâåëè÷èâàåòñÿ íà åäèíèöó++
            break;     //è îñòàíàâëèâàåòñÿ break
        case 'D':     //Òðåòüå çíà÷åíèåcase 'D', åñëè íå÷üÿ
            ties++;    //òîãäà ïåðåìåííàÿties óâåëè÷èâàåòñÿ íà åäèíèöó++
            break;     //è îñòàíàâëèâàåòñÿ break
        }

        std::cout << "\n\t*Winer statistic*\nPlayer X: " << x_wins//Ïðîïèñûâàåòñÿ ñòàòèñòèêà,âûâîäèòñÿ ñòàòèñòèêà íà ýêðàí/â îêíî êîíñîëè ñ ïîìîùüþ std::cout << "Winer statistic\nPlayer X: " << x_wins, ýòî ñêîëüêî ðàç ïîëüçîâàòåëü èãðàþùèé Õ âûèãðàë
                  << ", Player 0: "<<o_wins << " and Ties: "<<ties<<"\n\n";//"Player 0: "<<o_wins << " and Ties: "<<ties<<" ýòî ñêîëüêî ðàç ïîëüçîâàòåëü èãðàþùèé Î âûèãðàë. Ñêîëüêî íå÷üèõ,
        std::cout << "\n would you like to play again? (y/n): ";//"would you like to play again? (y/n):" çàäà¸òñÿ âîïðîñ: “æåëàåòå ïðîäîëæèòü èãðó?”,
        std::cin  >> reply;//à ñ ïîìîùüþ îáúåêòà cin ïîëüçîâàòåëü ìîæåò ââåñòè çíà÷åíèåreply(îòâåò) y, à åñëè ïîëüçîâàòåëü íå õî÷åò èãðàòü òî íóæíî ââåñòè n
        while(reply != "y" && reply !="n") //öèêë while(ïîêà çíà÷åíèåreply(îòâåò)  !=íå ðàâíî "y" èëè&& ïîêà çíà÷åíèåreply(îòâåò) !=íå ðàâíî "n") òî öèêë áåñêîíå÷åí
        {
            std::cout << "please inter a valid reply (y/n):";//ñòðîêà ïðîñèò ïîëüçîâàòåëÿ ââåñòè åù¸ çíà÷åíèå,åñëè äî ýòîãî íåáûëî ââåäèíî y èëè n
            std::cin  >> reply;//ñ ïîìîùüþ îáúåêòà cin âûâîäèò íà ýêðàí ââåä¸ííîå ïîëüçîâàòåëåì çíà÷åíèå è îïÿòü ïðîâåðÿåòñÿ â öèêëå.
        }

    }//


    return 0;//Îïåðàòîð return âîçâðàùàåò ôóíêöèè main()  0(íîëü)
}
